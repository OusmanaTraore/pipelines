// on lance les jobs sur le slave Jenkins

node('slavejenkins') {

// on définit les variables d'environnement pour l'image Docker avec un credential pour se connecter à Docker hub

    def  registry = "jpgibart/projet_cd_test"
    def  registryCredential = 'dockerhub'
    def  dockerImage = ''

//premier stage : on récupère le pipeline dans notre projet

    stage('Cloning Git for jenkins file'){       
        git url: 'https://gitlab.com/projetcd/pipelines.git'
    } 
        
//on va chercher la branche develop de notre appli sur git et on la build avec maven        
        
    stage('cloning Git for devopsapp') {
        // Get some code from a GitHub repository
        git branch: 'develop', url: 'https://gitlab.com/projetcd/devopsapp.git'
    }
        
    withMaven(
        // Maven installation declared in the Jenkins "Global Tool Configuration"
        maven: 'maven') {

      // Run the maven build
      sh "mvn clean package"
    }

    stage('cloning git for image docker') {
        // Get some code from a GitHub repository
        git url: 'https://gitlab.com/projetcd/pipelines.git'
        
        sh "echo '\nCOPY target/devops-1.0.war /bin' >> Dockerfile"
    }

    stage('Building docker Image') {        
        script {
            dockerImage = docker.build(registry + ":${currentBuild.number}", ".")        
        }
    }
    
    stage('Push docker Image'){
        script{
            docker.withRegistry('', registryCredential){
                dockerImage.push()             
            }
        } 
    }
    
    stage('Cloning Git for playbook ansible'){       
                git url: 'https://gitlab.com/projetcd/pipelines.git'
    }
    
    stage('changing version in our playbook') {
        
        sh "sed -i 's/projet_cd_test/projet_cd_test:${currentBuild.number}/' playbook_test.yml"
    }


    stage('Deploiement Ansible test') {
        ansiblePlaybook (
            colorized: true, 
            become: true,
            playbook: 'playbook_test.yml',
            inventory: 'inventory.ini'
        )
    }
}
